buildscript {
    ext {
        verKotlin = '1.3.0'
        verSpringboot = "2.0.5.RELEASE"
        verSpringData = "2.0.10.RELEASE"
        verSpringDepManage = "1.0.6.RELEASE"
        verShiro = "1.4.0"
        verJooq = "3.11.5"
        verSwaggerStarter = "1.8.0.RELEASE"
    }
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${verSpringboot}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${verKotlin}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${verKotlin}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'maven'
apply plugin: 'idea'
//apply plugin: 'org.springframework.boot'
//apply plugin: 'io.spring.dependency-management'

group = 'com.github.rainmanhhh'
version = '0.0.10'

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${verKotlin}")
    compile("org.jooq:jooq:${verJooq}")
    compile("org.apache.shiro:shiro-spring:${verShiro}")
    compile("org.springframework.data:spring-data-commons:${verSpringData}")
    compile("com.spring4all:swagger-spring-boot-starter:${verSwaggerStarter}")
    compile("javax.servlet:javax.servlet-api:4.0.1")
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from(sourceSets.main.allSource)
}
//
//task javadocJar(type: Jar) {
//    classifier = 'javadoc'
//    from(javadoc)
//}

artifacts {
    archives jar
    archives sourceJar
//    archives javadocJar
}